# 项目config 唯一标识name
spring:
  application:
    name: spring-cloud-eureka
server:
  port: 8761

#单点，独立Eureka服务配置
#  Eureka config  Eureka服务器进行身份验证 http://${security.user.name}:${security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/
eureka:
  instance:
    hostname: localhost
    metadataMap:
      instanceId: ${spring.application.name}:${random.value}
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
    fetch-registry: false
    register-with-eureka: false
  server:
#    #当server在15分钟内，比值低于percent，即少了15%的微服务心跳，server会进入自我保护状态(考虑网络的动荡)
#    enable-self-preservation: true
#    renewal-percent-threshold: 0.85 #默认是85%
#    renewal-threshold-update-interval-ms: 15 #默认是15分钟
#    response-cache-update-interval-ms: 10 #缓存更新时间，默认30s
#    response-cache-auto-expiration-in-seconds: 30 #缓存过期时间，默认180s
    #eviction-interval-timer-in-ms: 3000 #清理无效时间间隔 (单位毫秒，默认是60*1000
#权限认证
security:
  basic:
    enabled: false
  user:
    name: daoyuan.xiong
    password: mljr.com

# 放开安全认证
management:
  security:
    enabled: false


#对等意识，集群Eureka服务器配置
---
spring:
  application:
    name: spring-cloud-eureka
  profiles: peer1
server:
  port: 8001
eureka:
  instance:
    hostname: peer1
  client:
    serviceUrl:
      defaultZone: http://peer2:8002/eureka/,http://peer3:8003/eureka/
---
spring:
  application:
    name: spring-cloud-eureka
  profiles: peer2
server:
  port: 8002
eureka:
  instance:
    hostname: peer2
  client:
    serviceUrl:
      defaultZone: http://peer1:8001/eureka/,http://peer3:8003/eureka/
---
spring:
  application:
    name: spring-cloud-eureka
  profiles: peer3
server:
  port: 8003
eureka:
  instance:
    hostname: peer3
  client:
    serviceUrl:
      defaultZone: http://peer1:8001/eureka/,http://peer2:8001/eureka/




